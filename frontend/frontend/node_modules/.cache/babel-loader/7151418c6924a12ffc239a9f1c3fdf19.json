{"ast":null,"code":"var _jsxFileName = \"C:\\\\ratke\\\\programacao_web\\\\projeto_web\\\\frontend\\\\frontend\\\\src\\\\ListaLivros.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport api from './services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover\n    }\n  }\n}))(TableRow);\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  }\n});\nexport default function ListaLivro() {\n  _s();\n\n  const classes = useStyles();\n  const [livros, setLivros] = useState([]);\n\n  async function handleDeleteLivro(id) {\n    try {\n      await api.delete(`book/${id}`, {});\n      setLivros(livros.filter(livro => livro.idlivro !== id));\n    } catch (error) {\n      alert('Erro ao deletar livro');\n    }\n  }\n\n  useEffect(() => {\n    api.get('books', {}).then(response => {\n      setLivros(response.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      className: classes.table,\n      size: \"small\",\n      \"aria-label\": \"a dense table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n            children: \"Nome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            align: \"right\",\n            children: \"Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            align: \"right\",\n            children: \"ISBN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            align: \"right\",\n            children: \"Quantidade\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            align: \"center\",\n            children: \"Excluir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: livros.map(livro => /*#__PURE__*/_jsxDEV(StyledTableRow, {\n          children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n            component: \"th\",\n            scope: \"row\",\n            children: livro.nome\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            align: \"right\",\n            children: livro.idlivro\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            align: \"right\",\n            children: livro.isbn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            align: \"right\",\n            children: livro.quantidade\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            align: \"center\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => handleDeleteLivro(livro.idlivro),\n              children: \"Excluir\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, livro.idlivro, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ListaLivro, \"n9ZyaDvtWdLOD1ivYpJ6ISoSvDs=\", false, function () {\n  return [useStyles];\n});\n\n_c = ListaLivro;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListaLivro\");","map":{"version":3,"sources":["C:/ratke/programacao_web/projeto_web/frontend/frontend/src/ListaLivros.js"],"names":["React","useState","useEffect","withStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","api","StyledTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","root","action","hover","useStyles","table","minWidth","ListaLivro","classes","livros","setLivros","handleDeleteLivro","id","delete","filter","livro","idlivro","error","alert","get","then","response","data","map","nome","isbn","quantidade"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport api from './services/api';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }))(TableCell);\r\n  \r\n  const StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n  }))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nexport default function ListaLivro() {\r\n  const classes = useStyles();\r\n\r\n  const [livros, setLivros] = useState([]);\r\n\r\n  async function handleDeleteLivro(id) {\r\n    try {\r\n        await api.delete(`book/${id}`, {});\r\n        setLivros(livros.filter(livro => livro.idlivro !== id));\r\n    } catch (error) {\r\n        alert('Erro ao deletar livro');\r\n    }\r\n}\r\n\r\n  useEffect(() => {\r\n    api.get('books',{}).then(response => {\r\n        setLivros(response.data);\r\n    });\r\n}, []);  \r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell >Nome</StyledTableCell >\r\n            <StyledTableCell  align=\"right\">Id</StyledTableCell >\r\n            <StyledTableCell  align=\"right\">ISBN</StyledTableCell >\r\n            <StyledTableCell  align=\"right\">Quantidade</StyledTableCell >\r\n            <StyledTableCell  align=\"center\">Excluir</StyledTableCell >\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {livros.map(livro => (\r\n            <StyledTableRow  key={livro.idlivro}>\r\n              <StyledTableCell  component=\"th\" scope=\"row\">\r\n                {livro.nome}\r\n              </StyledTableCell>\r\n              <StyledTableCell  align=\"right\">{livro.idlivro}</StyledTableCell >\r\n              <StyledTableCell  align=\"right\">{livro.isbn}</StyledTableCell >\r\n              <StyledTableCell  align=\"right\">{livro.quantidade}</StyledTableCell >\r\n              <StyledTableCell  align=\"center\">\r\n                  <button type=\"button\" onClick={() => handleDeleteLivro(livro.idlivro)}>Excluir</button></StyledTableCell >\r\n            </StyledTableRow >\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}